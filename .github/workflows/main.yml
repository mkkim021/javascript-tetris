# GitHub Actions Workflow: Tetris 빌드 및 배포 자동화

# Workflow 실행 조건: 
# master 브랜치에 코드가 push되었을 때 실행됨
name: build and deploy tetris

on:
  push:
    branches: [ "master" ]  # master 브랜치에 push될 때만 실행됨

# Actions에서 코드 내용을 읽을 수 있도록 설정
permissions:
  contents: read  # 코드 저장소 내용을 읽을 수 있는 권한 부여

# Jobs 정의
jobs:
  build:
    runs-on: ubuntu-latest  # 최신 버전의 Ubuntu에서 실행

    steps:
      # 1. 저장소 코드 체크아웃
      - uses: actions/checkout@v3  # 현재 저장소의 코드를 가져옴

      # 2. Docker 빌드 및 Docker Hub로 푸시
      - name: Docker build & push to docker repo
        run: |
          # Docker Hub 로그인 (GitHub Secrets 사용)
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

          # Docker 이미지 빌드
          docker build -t ${{ secrets.DOCKER_REPO }}/tetris .

          # Docker Hub에 푸시
          docker push ${{ secrets.DOCKER_REPO }}/tetris

      # 3. 원격 서버에 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master  # SSH 액션을 사용하여 원격 서버에 접속
        id: deploy
        with:
          host: ${{ secrets.HOST }}  # SSH 접속할 서버 주소 (GitHub Secrets에 저장)
          username: ubuntu  # 원격 서버의 사용자명
          key: ${{ secrets.KEY }}  # SSH 개인 키 (GitHub Secrets에 저장)

          # 원격 서버에서 실행할 명령어들
          script: |
            # 실행 중인 모든 Docker 컨테이너 중지 및 삭제
            sudo docker rm -f $(sudo docker ps -qa)

            # 최신 Docker 이미지 가져오기
            sudo docker pull ${{ secrets.DOCKER_REPO }}/tetris

            # 새로운 컨테이너 실행
            sudo docker run -d --name tetris -p 8080:8888 ${{ secrets.DOCKER_REPO }}/tetris
